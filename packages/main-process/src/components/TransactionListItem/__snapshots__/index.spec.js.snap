// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListItemContainer renders correctly 1`] = `
<Connect(ListItemContainer)
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ListItemContainer
    analyticsActions={
      Object {
        "createABTest": [Function],
        "createABTestSuccess": [Function],
        "initUserSession": [Function],
        "logEvent": [Function],
        "logGoal": [Function],
        "logPageView": [Function],
        "startSession": [Function],
        "stopSession": [Function],
      }
    }
    bchActions={
      Object {
        "createMetadataBch": [Function],
        "fetchMetadataBch": [Function],
        "fetchMetadataBchFailure": [Function],
        "fetchMetadataBchLoading": [Function],
        "fetchMetadataBchSuccess": [Function],
        "setAccountArchived": [Function],
        "setAccountLabel": [Function],
        "setDefaultAccountIdx": [Function],
        "setTxNotesBch": [Function],
      }
    }
    erc20List={Object {}}
    ethActions={
      Object {
        "createMetadataEth": [Function],
        "fetchMetadataEth": [Function],
        "fetchMetadataEthFailure": [Function],
        "fetchMetadataEthLoading": [Function],
        "fetchMetadataEthSuccess": [Function],
        "setErc20HasSeen": [Function],
        "setLatestTxEth": [Function],
        "setLatestTxTimestampEth": [Function],
        "setTxNotesErc20": [Function],
        "setTxNotesEth": [Function],
        "updateMetadataEth": [Function],
      }
    }
    ethTxActions={
      Object {
        "checkLowEthBalance": [Function],
        "checkLowEthBalanceSuccess": [Function],
        "erc20TransactionsAtBound": [Function],
        "fetchCurrentBalance": [Function],
        "fetchCurrentBalanceFailure": [Function],
        "fetchCurrentBalanceLoading": [Function],
        "fetchCurrentBalanceSuccess": [Function],
        "fetchData": [Function],
        "fetchDataFailure": [Function],
        "fetchDataLoading": [Function],
        "fetchDataSuccess": [Function],
        "fetchErc20Balance": [Function],
        "fetchErc20BalanceFailure": [Function],
        "fetchErc20BalanceLoading": [Function],
        "fetchErc20BalanceSuccess": [Function],
        "fetchErc20Data": [Function],
        "fetchErc20DataFailure": [Function],
        "fetchErc20DataLoading": [Function],
        "fetchErc20DataSuccess": [Function],
        "fetchErc20Rates": [Function],
        "fetchErc20RatesFailure": [Function],
        "fetchErc20RatesLoading": [Function],
        "fetchErc20RatesSuccess": [Function],
        "fetchErc20Transactions": [Function],
        "fetchErc20TransactionsFailure": [Function],
        "fetchErc20TransactionsLoading": [Function],
        "fetchErc20TransactionsSuccess": [Function],
        "fetchErc20TxFee": [Function],
        "fetchErc20TxFeeFailure": [Function],
        "fetchErc20TxFeeLoading": [Function],
        "fetchErc20TxFeeSuccess": [Function],
        "fetchFee": [Function],
        "fetchFeeFailure": [Function],
        "fetchFeeLoading": [Function],
        "fetchFeeSuccess": [Function],
        "fetchLatestBlock": [Function],
        "fetchLatestBlockFailure": [Function],
        "fetchLatestBlockLoading": [Function],
        "fetchLatestBlockSuccess": [Function],
        "fetchLegacyBalance": [Function],
        "fetchLegacyBalanceFailure": [Function],
        "fetchLegacyBalanceLoading": [Function],
        "fetchLegacyBalanceSuccess": [Function],
        "fetchRates": [Function],
        "fetchRatesFailure": [Function],
        "fetchRatesLoading": [Function],
        "fetchRatesSuccess": [Function],
        "fetchTransactions": [Function],
        "fetchTransactionsFailure": [Function],
        "fetchTransactionsLoading": [Function],
        "fetchTransactionsSuccess": [Function],
        "transactionsAtBound": [Function],
      }
    }
    logActions={
      Object {
        "logErrorMessage": [Function],
        "logInfoMessage": [Function],
        "setLogLevel": [Function],
      }
    }
    preferencesActions={
      Object {
        "hideAirdropClaimModal": [Function],
        "hideKycCompleted": [Function],
        "hideKycGetStarted": [Function],
        "hideSwapBanner": [Function],
        "hideSwapUpgradeModal": [Function],
        "hideUpgradeForAirdropModal": [Function],
        "registerProtocolHandler": [Function],
        "setCulture": [Function],
        "setLanguage": [Function],
        "setTheme": [Function],
        "setTotalBalancesDropdown": [Function],
        "toggleCoinDisplayed": [Function],
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
    walletActions={
      Object {
        "createLegacyAddress": [Function],
        "deleteHdAddressLabel": [Function],
        "deleteLegacyAddress": [Function],
        "deleteWrapper": [Function],
        "mergeWrapper": [Function],
        "newHdAccount": [Function],
        "refreshWrapper": [Function],
        "setAccountArchived": [Function],
        "setAccountLabel": [Function],
        "setAddressArchived": [Function],
        "setAutoLogout": [Function],
        "setDefaultAccountIdx": [Function],
        "setHdAddressLabel": [Function],
        "setLegacyAddressLabel": [Function],
        "setMainPassword": [Function],
        "setPayloadChecksum": [Function],
        "setSyncPubKeys": [Function],
        "setTransactionNote": [Function],
        "setWrapper": [Function],
        "verifyMnemonic": [Function],
      }
    }
    xlmActions={
      Object {
        "createMetadataXlm": [Function],
        "fetchMetadataXlm": [Function],
        "fetchMetadataXlmFailure": [Function],
        "fetchMetadataXlmLoading": [Function],
        "fetchMetadataXlmSuccess": [Function],
        "setTxNotesXlm": [Function],
        "updateMetadataXlm": [Function],
      }
    }
  >
    <Component
      handleEditDescription={[Function]}
      handleToggle={[Function]}
      isToggled={false}
      onViewTxDetails={[Function]}
    >
      <div />
    </Component>
  </ListItemContainer>
</Connect(ListItemContainer)>
`;
