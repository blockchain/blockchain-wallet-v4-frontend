// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListItemContainer renders correctly 1`] = `
<Connect(ListItemContainer)
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ListItemContainer
    analyticsActions={
      Object {
        "initUserSession": [Function],
        "logEvent": [Function],
        "logGoal": [Function],
        "logPageView": [Function],
        "startSession": [Function],
        "stopSession": [Function],
      }
    }
    bchActions={
      Object {
        "createMetadataBch": [Function],
        "fetchMetadataBch": [Function],
        "fetchMetadataBchFailure": [Function],
        "fetchMetadataBchLoading": [Function],
        "fetchMetadataBchSuccess": [Function],
        "setAccountArchived": [Function],
        "setAccountLabel": [Function],
        "setDefaultAccountIdx": [Function],
        "setTxNotesBch": [Function],
      }
    }
    bsvActions={
      Object {
        "createMetadataBsv": [Function],
        "fetchMetadataBsv": [Function],
        "fetchMetadataBsvFailure": [Function],
        "fetchMetadataBsvLoading": [Function],
        "fetchMetadataBsvSuccess": [Function],
        "setAccountArchived": [Function],
        "setHasSeen": [Function],
        "setTxNotesBsv": [Function],
      }
    }
    erc20List={Object {}}
    ethActions={
      Object {
        "createMetadataEth": [Function],
        "fetchMetadataEth": [Function],
        "fetchMetadataEthFailure": [Function],
        "fetchMetadataEthLoading": [Function],
        "fetchMetadataEthSuccess": [Function],
        "setErc20HasSeen": [Function],
        "setLatestTxEth": [Function],
        "setLatestTxTimestampEth": [Function],
        "setTxNotesErc20": [Function],
        "setTxNotesEth": [Function],
        "updateMetadataEth": [Function],
      }
    }
    logActions={
      Object {
        "logErrorMessage": [Function],
        "logInfoMessage": [Function],
        "setLogLevel": [Function],
      }
    }
    preferencesActions={
      Object {
        "hideAirdropClaimModal": [Function],
        "hideAirdropReminderModal": [Function],
        "hideKycCompleted": [Function],
        "hideKycGetStarted": [Function],
        "hideSwapBanner": [Function],
        "hideSwapUpgradeModal": [Function],
        "hideUpgradeForAirdropModal": [Function],
        "setCulture": [Function],
        "setLanguage": [Function],
        "setTheme": [Function],
        "setTotalBalancesDropdown": [Function],
        "toggleCoinDisplayed": [Function],
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
    walletActions={
      Object {
        "createLegacyAddress": [Function],
        "deleteHdAddressLabel": [Function],
        "deleteLegacyAddress": [Function],
        "deleteWrapper": [Function],
        "refreshWrapper": [Function],
        "setAccountArchived": [Function],
        "setAccountLabel": [Function],
        "setAddressArchived": [Function],
        "setAutoLogout": [Function],
        "setDefaultAccountIdx": [Function],
        "setHdAddressLabel": [Function],
        "setLegacyAddressLabel": [Function],
        "setMainPassword": [Function],
        "setPayloadChecksum": [Function],
        "setSyncPubKeys": [Function],
        "setTransactionNote": [Function],
        "setWrapper": [Function],
        "verifyMnemonic": [Function],
      }
    }
    xlmActions={
      Object {
        "createMetadataXlm": [Function],
        "fetchMetadataXlm": [Function],
        "fetchMetadataXlmFailure": [Function],
        "fetchMetadataXlmLoading": [Function],
        "fetchMetadataXlmSuccess": [Function],
        "setTxNotesXlm": [Function],
        "updateMetadataXlm": [Function],
      }
    }
  >
    <Component
      handleEditDescription={[Function]}
      handleToggle={[Function]}
      isToggled={false}
      onViewTxDetails={[Function]}
    >
      <div />
    </Component>
  </ListItemContainer>
</Connect(ListItemContainer)>
`;
